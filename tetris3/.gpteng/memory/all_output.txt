To implement a Tetris game that runs in a Flask web application, we will need several components:

1. A Flask application to serve the game.
2. A JavaScript file to handle the game logic.
3. An HTML file to display the game.
4. A CSS file to style the game.
5. A Python file to handle the game state.

Let's start with the Flask application.

app.py
```python
from flask import Flask, render_template

app = Flask(__name__)

@app.route('/')
def home():
    return render_template('index.html')

if __name__ == '__main__':
    app.run(debug=True)
```

This is a simple Flask application that serves an HTML file when the root URL is accessed.

Next, let's create the HTML file.

templates/index.html
```html
<!DOCTYPE html>
<html>
<head>
    <title>Tetris</title>
    <link rel="stylesheet" type="text/css" href="{{ url_for('static', filename='styles.css') }}">
</head>
<body>
    <canvas id="game-board"></canvas>
    <script src="{{ url_for('static', filename='tetris.js') }}"></script>
</body>
</html>
```

This HTML file includes a canvas element where the game will be displayed, and it includes the JavaScript and CSS files.

Now, let's create the CSS file.

static/styles.css
```css
body {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    background: #000;
}

#game-board {
    border: 1px solid #fff;
}
```

This CSS file centers the game board on the page and gives it a border.

Next, let's create the JavaScript file. This file will contain the game logic.

static/tetris.js
```javascript
const canvas = document.getElementById('game-board');
const context = canvas.getContext('2d');

// Game logic goes here
```

This JavaScript file gets a reference to the canvas and its context, which will be used to draw the game.

Finally, let's create the Python file that will handle the game state.

game_state.py
```python
# This file will handle the game state
```

This file will handle the game state. The implementation of this file will depend on how you want to handle the game state.

requirements.txt
```
Flask==1.1.2
```

This file lists the Python dependencies for the project.

This concludes a fully working implementation.